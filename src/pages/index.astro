---
import BaseLayout from "../layouts/BaseLayout.astro"
import Section from "../components/Section.astro";
import Cards from "../components/Cards.astro";
import NewFeature from "../components/NewFeature.astro"

const pageTitle = "Arrecife"
---

<BaseLayout pageTitle={pageTitle}>
	<h1 class="
		text-4xl sm:text-7xl text-center 
		font-splineSans-bold font-bold
		my-10
		">
			Herramientas a<br>
			un clic <span class="text-purple-300">(o varios)</span>
  </h1>
	<div>
		<Section sectionTitle="Explora nuestras categorías" mx="mr-0">
			<Cards />
		</Section>
		<NewFeature />
		<Section sectionTitle="La foto del día">
			<div>
				<div>
					<img id="apod-img" src='' alt="Mírate! Tú eres la foto del día" class="
						w-full sm:h-screen object-cover
						rounded-[38px] shadow-lg shadow-indigo-950
					">
					<a
						lang="en" 
						href="./space/picture-of-the-day/" 
						class=" hidden sm:inline-block w-96 truncate relative
						bottom-16 text-gray-300 text-sm font-splineSans-regular py-2 px-4 z-50 rounded-lg bg-cold-500/50 hover:bg-cold-500/80 ml-6 overflow-hidden duration-200" 
						>
						<span id="apod-explanation">
						<span id="apod-explanation">
						</span>
					</a>
				</div>
				</div>
				<div class="flex justify-end relative top-4 sm:top-0 mr-6">
					<a 
						id="apod-title"
						id="apod-title"
						lang="en" 
						href="./space/picture-of-the-day/" 
						class="text-lg underline hover:text-cold-300 duration-200"
						>
					</a>
				</div>
			</div>
		</Section>
	</div>

	<script type="module">
		const data = await getApodData()
	
		const img = document.querySelector("#apod-img")
		const explanation = document.querySelector("#apod-explanation")
		const title = document.querySelector("#apod-title")
	
		img?.setAttribute("src", data.url)
		explanation?.innerText = data.explanation || "Click to see more"
		title?.innerText = data.title
	
		async function fetchApodData() {
			const NASA_TOKEN = import.meta.env.NASA_KEY
			const apodApiUrl = `https://api.nasa.gov/planetary/apod?api_key=${NASA_TOKEN}`
	
			try {
				const response = await fetch(apodApiUrl);
				const rateLimitRemaining = response.headers.get("X-RateLimit-Remaining");
				if (!response.ok) {
					throw new Error("Network response was not ok");
				}
	
				const data = await response.json();
				data.rateLimitRemaining = rateLimitRemaining;
				return data;
			} catch (error) {
				throw error;
			}
		}

		function getCurrentDate() {
			const today = new Date();
			const year = today.getFullYear();
			const month = String(today.getMonth() + 1).padStart(2, '0');
			const day = String(today.getDate()).padStart(2, '0');
			return `${year}-${month}-${day}`;
		}

		function getApodDataFromCache() {
			let list = localStorage.getItem('listApodData');
			list = list && JSON.parse(list);
			return list
		}

		function getCurrentApodData() {
			const list = getApodDataFromCache() ? getApodDataFromCache() : [];
			const todayData = list && list.find(item => item.date === getCurrentDate());
			return todayData ? todayData : null;
		}
	
		function saveApodDataToCache(apodData) {
			const list = getApodDataFromCache() ? getApodDataFromCache() : [];
			list.push(apodData);
			localStorage.setItem('listApodData', JSON.stringify(list));
		}
	
		async function getApodData() {
			const cachedApodData = getCurrentApodData();
			if (cachedApodData && cachedApodData.date === getCurrentDate()) {
				return cachedApodData;
			} else {
				const newApodData = await fetchApodData();
				saveApodDataToCache(newApodData);
				console.log(newApodData.rateLimitRemaining);
				return newApodData;
			}
		}
	</script>
</BaseLayout>


